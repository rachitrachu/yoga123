<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.yugma.school</groupId>
	<artifactId>School-YUGMA</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>School(YUGMA)</name>
	<description>School Project(YUGMA)</description>
    
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<jetty.maven.plugin>9.4.1.v20170120</jetty.maven.plugin>
		<appengine.maven.plugin>1.0.0</appengine.maven.plugin>
	</properties>
   
    
    <dependencyManagement>
	     <dependencies>
	        <dependency>
	            <!-- Import dependency management from Spring Boot -->
	            <groupId>org.springframework.boot</groupId>
	            <artifactId>spring-boot-dependencies</artifactId>
	            <version>1.5.2.RELEASE</version>
	            <type>pom</type>
	            <scope>import</scope>
	        </dependency>
	     </dependencies>
	</dependencyManagement>
    
	<dependencies>
		
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>
        
        <dependency>
		  <groupId>org.springframework.security</groupId>
		  <artifactId>spring-security-messaging</artifactId>
		</dependency>
        
		<dependency>
		    <groupId>io.springfox</groupId>
		    <artifactId>springfox-swagger2</artifactId>
		    <version>2.6.1</version>
		</dependency> 
		
		<dependency>
		    <groupId>io.springfox</groupId>
		    <artifactId>springfox-swagger-ui</artifactId>
		    <version>2.6.1</version>
		</dependency>
		
		<dependency>
			  <groupId>com.google.guava</groupId>
			  <artifactId>guava</artifactId>
			  <version>21.0</version>
		</dependency>
		
		<dependency>
		    <groupId>commons-fileupload</groupId>
		    <artifactId>commons-fileupload</artifactId>
		    <version>1.3.1</version>
		</dependency>
		<!--- 
		Google cloud storage dependency -->
		<dependency>
	      	<groupId>com.google.cloud</groupId>
	      	<artifactId>google-cloud-storage</artifactId>
	     	<version>0.10.0-beta</version>
	     	<exclusions>
	            <exclusion>
	                <groupId>javax.servlet</groupId>
	                <artifactId>servlet-api</artifactId>
	            </exclusion>
	        </exclusions>
	    </dependency>
		
		<!-- pusher api -->
		<dependency>
			<groupId>com.pusher</groupId>
			<artifactId>pusher-http-java</artifactId>
			<version>1.0.0</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jersey</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
    	</dependency>

		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>

		<!-- jdbc token store -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
		</dependency>
		
		<!-- Spring Security OAuth2 -->
		<dependency>
			<groupId>org.springframework.security.oauth</groupId>
			<artifactId>spring-security-oauth2</artifactId>
		</dependency>
		
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		
		<dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-mail</artifactId>
   		</dependency>
    
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>1.5.2.RELEASE</version>
			</plugin>
			
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.1</version>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.4</version>
					<configuration>
						<failOnMissingWebXml>false</failOnMissingWebXml>
					</configuration>
				</plugin>
				
				<!-- <plugin>                          Used for local debugging
			        <groupId>org.eclipse.jetty</groupId>
			        <artifactId>jetty-maven-plugin</artifactId>
			        <version>${jetty.maven.plugin}</version>
			    </plugin>
			
				<plugin>
				      <groupId>com.google.cloud.tools</groupId>
				      <artifactId>appengine-maven-plugin</artifactId>
				      <version>${appengine.maven.plugin}</version>
			    </plugin> -->
		</plugins>
	</build>


</project>
